"""user 모델에 provider 추가

Revision ID: 84a065c4cc69
Revises: 0b1202e0109c
Create Date: 2025-01-06 14:27:15.283419

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "84a065c4cc69"
down_revision: Union[str, None] = "0b1202e0109c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('provider', sa.VARCHAR(), nullable=True))
    op.alter_column("users", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "password", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "users", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "users",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    op.alter_column("users", "is_active", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column("users", "provider", existing_type=sa.VARCHAR(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("users", "provider", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "is_active", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "users",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    op.alter_column(
        "users", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column("users", "password", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "name", existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###
