"""modified enum column type 2501081424

Revision ID: 06549a2a4ffa
Revises: dc05ed59533c
Create Date: 2025-01-08 14:24:36.835849

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "06549a2a4ffa"
down_revision: Union[str, None] = "dc05ed59533c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "diaries",
        "weather",
        existing_type=postgresql.ENUM(
            "clear", "some_clouds", "cloudy", "rainy", "snowy", name="weatherenum"
        ),
        nullable=False,
    )
    op.alter_column(
        "diaries",
        "mood",
        existing_type=postgresql.ENUM(
            "happy", "good", "normal", "tired", "sad", name="moodenum"
        ),
        nullable=False,
    )
    op.alter_column(
        "ex_diaries",
        "weather",
        existing_type=postgresql.ENUM(
            "clear", "some_clouds", "cloudy", "rainy", "snowy", name="ex_weatherenum"
        ),
        nullable=False,
    )
    op.alter_column(
        "ex_diaries",
        "mood",
        existing_type=postgresql.ENUM(
            "happy", "good", "normal", "tired", "sad", name="ex_moodenum"
        ),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "ex_diaries",
        "mood",
        existing_type=postgresql.ENUM(
            "happy", "good", "normal", "tired", "sad", name="ex_moodenum"
        ),
        nullable=True,
    )
    op.alter_column(
        "ex_diaries",
        "weather",
        existing_type=postgresql.ENUM(
            "clear", "some_clouds", "cloudy", "rainy", "snowy", name="ex_weatherenum"
        ),
        nullable=True,
    )
    op.alter_column(
        "diaries",
        "mood",
        existing_type=postgresql.ENUM(
            "happy", "good", "normal", "tired", "sad", name="moodenum"
        ),
        nullable=True,
    )
    op.alter_column(
        "diaries",
        "weather",
        existing_type=postgresql.ENUM(
            "clear", "some_clouds", "cloudy", "rainy", "snowy", name="weatherenum"
        ),
        nullable=True,
    )
    # ### end Alembic commands ###
